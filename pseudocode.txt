----------------------------------------------------------
Algorithm that sorts disks using the Alternate Algorithm 
----------------------------------------------------------

Alternate:
   
int swapped = 0                         // 1tu 
disk_state state = before               // 1tu 
for i = 0 to n do                       // n+1 times 
  for j = 0 to n-1 do                   // n times 
  if (Left == Dark && Right == light)   // 3tu 
     swap(Left_Disk, Right_Disk)        // 1tu
     ++swapped                          // 1tu
end 


**************************************************************************************************** 
Step Count calculation 
****************************************************************************************************

n+1         n             
Σ           Σ             
i = 0      j = 0        
(outter)   (inner) 

if statement s.c = 3+1+1+max(2,0) = 7tu 

(inner)  n
         Σ  6^i = (6^(n)-1)/(6-1) 
         j = 0  
(outter) n+1 
         Σ  
****************************************************************************************************
Proof by limits 
****************************************************************************************************
 ∈ O(n^2)



----------------------------------------------------------
Algorithm that sorts disks using the Lawnmower Algorithm 
----------------------------------------------------------

Lawnmower:

 swapped = 0       1tu           

for i = 0 in n do:       n+1       
    swapped += 0         1tu
    if i > next(i) and != null do:    2tu
      swap(i, next(i))         1tu
      swapped++                1tu
    if swapped == 0 and next(i) != null do:     2tu
       break    1tu
    if next(i) == null  1tu
        for j = 0 in reverse n do:     n+1 tu
          if j < next(j) do:      1tu
             swap(j, next(j))     1tu
             swapped = 1       1tu
          else 
             swapped = 0       1tu
           if next(i) == null  1tu
               i = begin()     1tu
               break           1tu
          endif 

****************************************************************************************************
Step Count calculation 
****************************************************************************************************

1 + n+1(2+max(2,0) + 2+max(1,0) + 1+max(6n+6,0))
1 + n-1(2+2 + 2+1 + 1+6n+6) = n(4 + 3 + 6n+7) = n(6n+14) = 6n^2+14n

inside loop:
n+1(1+max(2,1)+1+max(2,0)) = n+1(1+2+1+2) = n+1(6) = 6n+6 

**************************************************************************************************** 
Proof by limits 
****************************************************************************************************

6n^2 + 14n ∈ O(n^2) 

lim as n -> infinity 6n^2 + 14n

6 + (14/n) = 6 + (0) = 6, so 6n^2 + 14n ∈ O(n^2)